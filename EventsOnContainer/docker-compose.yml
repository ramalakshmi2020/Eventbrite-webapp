version: '3.4'

networks:
  frontend:
  backend:


services:
  webmvc:
    image: events/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      EventCatalogUrl: http://eventcatalog
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.86.63:8800
      CallBackUrl: http://localhost:5000
      CartUrl: http://eventscart
      OrderUrl: http://eventsorder
      StripePublicKey: pk_test_51JVK6jLmx5ZYISGaXWbbubpbUrjNUx9slUuk8PfCITvId0wLpzTSYB4QgPYpfBXZJTfO8s6CcEAnW1BkBohzOOde00JgeJyPqS
      StripePrivateKey: sk_test_51JVK6jLmx5ZYISGaq6EhsNfXIvLXAF0acBc0v2lPxKICy1m7bismoauWwiVgZ8ZSHoEBDq6bKbEz37chKYeR8XOk00ERTIM7qx
    ports:
      - "5000:80"
    container_name: eventsshop
    networks:
      - frontend
    depends_on:
      - eventcatalog
      - tokenserver
      - eventscart
      - eventsorder

  eventcatalog:
    image: events/eventsapi
    build:
      context: .\EventsAPI
      dockerfile: Dockerfile
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: EventsDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
      ExternalEventUrl: http://localhost:3000
    ports:
      - "3000:80"
    container_name: eventcatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: events/tokenapi
    environment:
      DatabaseServer: tokensqlserver
      DatabaseName: TokenServiceDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:5000
    ports:
      - "8800:80"
    container_name: eventstokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - tokensqlserver

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1248:1433"
    container_name: eventcatalogsqlserver
    networks:
      - backend

  
  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ProductApi(!)
    ports:
      - "8000:1433"
    container_name: eventstokensqlserver
    networks:
      - backend

  basket.eventdata:
    image: redis
    ports: 
      - "7060:6379"
    container_name: eventbasketdata
    networks:
      - backend

  eventscart:
    image: events/cartapi
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: basket.eventdata
      IdentityUrl: http://192.168.86.63:8800
    ports:
      - "7040:80"
    container_name: eventscartapi
    networks:
      - frontend
      - backend
    depends_on:
      - basket.eventdata
      - tokensqlserver
      - rabbitmq

  eventsorder:
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    image: events/eventsorder
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl:  http://192.168.86.63:8800
      DatabaseServer: mssqlserver
      DatabaseName: OrdersDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "7070:80"
    container_name: eventsorderapi
    networks: 
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - tokenserver
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend